create database class;

create table dept (
    deptno int primary key,
    dname varchar(50),
    loc varchar(50)
);

insert into dept (deptno, dname, loc) values
(10, 'Accounting', 'New york'),
(20, 'Research', 'Dallas'),
(30, 'Sales', 'Chicago'),
(40, 'Operations', 'Boston');

create table emp (
    empno int primary key,
    ename varchar(50),
    job varchar(50),
    mgr_id int,
    hiredate date,
    sal decimal(10,2),
    comm decimal(10,2),
    deptno int,
    foreign key (deptno) references dept(deptno)
);

insert into emp (empno, ename, job, mgr_id, hiredate, sal, comm, deptno) values
(7369, 'Smith', 'clerk', 7902, '1980-12-17', 800, null, 20),
(7499, 'Allen', 'salesman', 7698, '1981-02-20', 1600, 300, 30),
(7521, 'Ward', 'salesman', 7698, '1981-02-22', 1250, 500, 30),
(7566, 'Jones', 'manager', 7839, '1981-04-02', 2975, null, 20),
(7654, 'Martin', 'salesman', 7698, '1981-09-28', 1250, 1400, 30),
(7698, 'Blake', 'manager', 7839, '1981-05-01', 2850, null, 30),
(7782, 'Clark', 'manager', 7839, '1981-06-09', 2450, null, 10),
(7788, 'Scott', 'analyst', 7566, '1987-04-19', 3000, null, 20),
(7839, 'King', 'president', null, '1981-11-17', 5000, null, 10),
(7844, 'Turner', 'salesman', 7698, '1981-09-08', 1500, 0, 30),
(7876, 'Adams', 'clerk', 7788, '1987-05-23', 1100, null, 20),
(7900, 'James', 'clerk', 7698, '1981-12-03', 950, null, 30),
(7902, 'Ford', 'analyst', 7566, '1981-12-03', 3000, null, 20),
(7934, 'Miller', 'clerk', 7782, '1982-01-23', 1300, null, 10);


select * from emp;
select * from dept;

--1. List all employees whose name begins with 'A'
select * from emp where ename like'A%';

--2. Select all those employees who don't have a manager.
select * from emp where job <> 'manager';

--3. List employee name, number, and salary for those employees who earn in the range 1200 to 1400.
select ename,empno,sal from emp where sal between 1200 and 1400

--4. Give all the employees in the RESEARCH department a 10% pay rise and verify the change.
--joins question - > 10% pay means 1.10
-- no need to update just show the changes -> select is used
select d.dname ,e.ename , e.sal , (e.sal*1.10) as increased_sal from emp e 
join dept d on d.deptno=e.deptno 
where d.dname='Research';

--5. Find the number of CLERKS employed with a descriptive heading.
select count(*) as no_of_clerks from emp where job='clerk';

--6.Find the average salary for each job type and the number of people employed in each job.
select count(*) as no_of_people , avg(sal) as avg_salary from emp;
select job , count(*) as no_of_people , avg(sal) as avg_salary from emp group by job;

--7. List the employees with the lowest and highest salary.
select * from emp order by sal asc;
select * from emp order by sal desc;

--8. List full details of departments that don't have any employees.
select * from dept d left join emp e on d.deptno=e.deptno where empno is null;

--9. Get the names and salaries of all the analysts earning more than 1200 who are based in department 20, sorted by name.
select ename , sal from emp where job='analyst' and sal>1200 and deptno=20 order by ename asc;

--10. For each department, list dept name and number together with the total salary paid to employees in that department.
select deptno ,count(job) as total_emp ,sum(sal) as total_salary from emp group by deptno;

--using joins to get the name
select d.dname ,d.deptno, count(e.job) as tot_emp , sum(e.sal) as tot_sal from emp e 
inner join dept d on d.deptno = e.deptno 
group by d.dname, d.deptno;

--11.Find out the salary of both MILLER and SMITH.
select ename , sal from emp where ename='Miller' or ename='Smith';

--12.Find out the names of the employees whose names begin with ‘A’ or ‘M’.
select * from emp where ename like 'A%' or ename like 'M%';

--13. Compute the yearly salary of SMITH.
select empno , ename, sal*12 as yearly_salary from emp where ename='Smith';

--14. List the name and salary for all employees whose salary is not in the range of 1500 and 2850.
select ename , sal from emp where sal not between 1500 and 2850;

--15. Find all managers who have more than 2 employees reporting to them.
select mgr_id,count(job) as emp_count from emp
group by mgr_id having count(job) > 2;

select e1.ename as 'Employee Name', e2.ename as 'Manager Name' from emp e1 join emp e2
on e1.empno = e2.mgr_id
 
